service: ampparit

custom:
  parentDomainName: heap.fi
  domainName: serverless.heap.fi
  tableName: ampparit
  region: eu-west-1

provider:
  name: aws
  runtime: python2.7
  region: ${self:custom.region}
  profile: heap
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:BatchWriteItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Scan
        - dynamodb:GetItem
      Resource: "arn:aws:dynamodb:${self:custom.region}:*:*"
  environment:
    TABLE_NAME: ${self:custom.tableName}

functions:
  fetcher:
    handler: fetcher.handler
    memorySize: 256
    events:
      - schedule: rate(15 minutes)
  apiGetItems:
    handler: api.get_items
    memorySize: 256
    events:
      - http:
          path: items
          method: get
          cors: true
  apiGetItem:
    handler: api.get_item
    memorySize: 256
    events:
      - http: GET items/{id}

package:
  exclude:
    - "*.txt"
    - "*.md"
    - "*.json"
    - "client"
    - "node_modules"

resources:
  Resources:
    NewsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    FrontendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.domainName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
    FrontendBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: FrontendBucket
        PolicyDocument:
          Statement:
            - Action: s3:GetObject
              Effect: Allow
              Resource: arn:aws:s3:::${self:custom.domainName}/*
              Principal: "*"
    DomainName:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: ${self:custom.parentDomainName}.
        Name: ${self:custom.domainName}.
        Type: CNAME
        TTL: 300
        ResourceRecords:
          - ${self:custom.domainName}.s3-website-${self:custom.region}.amazonaws.com
